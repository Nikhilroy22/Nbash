name: Termux-style Bash for Android ARMv7

on: [push, workflow_dispatch]

jobs:
  build-bash:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Build Tools
      run: sudo apt update && sudo apt install -y wget unzip file make

    - name: Download Android NDK r27c
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip -q android-ndk-r27c-linux.zip
        mv android-ndk-r27c ndk

    - name: Build Bash (Termux-style)
      run: |
        # Set up NDK and compiler
        export NDK=$GITHUB_WORKSPACE/ndk
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export PATH=$TOOLCHAIN/bin:$PATH
        export CC=armv7a-linux-androideabi24-clang
        export CFLAGS="-march=armv7-a -mfpu=neon -fPIE -pie -fstack-protector-strong -Oz -std=gnu99"
        export LDFLAGS="-pie -fPIE"
        export CPPFLAGS="-DTERMUX"

        # Download bash
        wget https://ftp.gnu.org/gnu/bash/bash-5.2.tar.gz
        tar -xzf bash-5.2.tar.gz
        cd bash-5.2

        bash_cv_func_sigsetjmp=yes \
        ./configure \
          --prefix=/data/data/com.termux/files/usr \
          --host=armv7a-linux-androideabi \
          --without-bash-malloc \
          --disable-nls \
          --enable-job-control \
          bash_cv_func_sigsetjmp=yes

        make -j4

        # Final binary
        mkdir -p $GITHUB_WORKSPACE/out
        cp bash $GITHUB_WORKSPACE/out/bash-termux-style

    - name: Upload Bash Binary
      uses: actions/upload-artifact@v4
      with:
        name: bash-termux-style
        path: out/bash-termux-style