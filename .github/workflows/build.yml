name: Build Bash & Hello for Android ARMv7

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: sudo apt update && sudo apt install -y wget unzip file make

    - name: Download Android NDK r27c
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip -q android-ndk-r27c-linux.zip
        mv android-ndk-r27c ndk

    - name: Set Environment Variables
      run: |
        echo "TOOLCHAIN=$GITHUB_WORKSPACE/ndk/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
        echo "PATH=$GITHUB_WORKSPACE/ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH" >> $GITHUB_ENV
        echo "CC=armv7a-linux-androideabi24-clang" >> $GITHUB_ENV
        echo "CFLAGS=-fPIE -pie -std=gnu99" >> $GITHUB_ENV
        echo "LDFLAGS=-fPIE -pie" >> $GITHUB_ENV
        echo "CPPFLAGS=-std=gnu99" >> $GITHUB_ENV

    - name: Build Hello Binary
      run: |
        $CC $CFLAGS hello.c -o hello $LDFLAGS
        file hello
        mkdir -p out
        cp hello out/hello-armv7

    - name: Build Bash Binary
      run: |
        wget https://ftp.gnu.org/gnu/bash/bash-5.3.tar.gz
        tar -xzf bash-5.3.tar.gz
        cd bash-5.3

        bash_cv_func_sigsetjmp=yes \
        ./configure \
          --host=armv7a-linux-androideabi \
          --prefix=/data/data/com.termux/files/usr \
          --disable-nls \
          --without-bash-malloc \
          --enable-job-control

        make -j4

        file bash
        cp bash ../out/bash-armv7

    - name: Upload Hello Binary
      uses: actions/upload-artifact@v4
      with:
        name: hello-armv7
        path: out/hello-armv7

    - name: Upload Bash Binary
      uses: actions/upload-artifact@v4
      with:
        name: bash-armv7
        path: out/bash-armv7